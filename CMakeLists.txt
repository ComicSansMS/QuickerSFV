cmake_minimum_required(VERSION 3.30)

set(QUICKER_SFV_PROJECT_VERSION_MAJOR 0)
set(QUICKER_SFV_PROJECT_VERSION_MINOR 1)
set(QUICKER_SFV_PROJECT_VERSION_PATCH 0)

if (NOT QUICKER_SFV_BUILD_RELEASE)
    string(TIMESTAMP QUICKER_SFV_PROJECT_VERSION_TWEAK "%y%j")
else()
    set(QUICKER_SFV_PROJECT_VERSION_TWEAK 0)
endif()
if (QUICKER_SFV_PROJECT_VERSION_TWEAK GREATER 65535)
    message(FATAL_ERROR "Invalid tweak version number (must be smaller than 65536): ${QUICKER_SFV_PROJECT_VERSION_TWEAK}")
endif()
set(QUICKER_SFV_PROJECT_VERSION ${QUICKER_SFV_PROJECT_VERSION_MAJOR}.${QUICKER_SFV_PROJECT_VERSION_MINOR}.${QUICKER_SFV_PROJECT_VERSION_PATCH}.${QUICKER_SFV_PROJECT_VERSION_TWEAK})

project(QuickerSFV
    VERSION ${QUICKER_SFV_PROJECT_VERSION}
    DESCRIPTION "QuickerSFV"
    HOMEPAGE_URL https://github.com/ComicSansMS/QuickerSFV/
)
message(STATUS "QuickerSFV V-${PROJECT_VERSION}")

if(MSVC)
    option(QUICKER_SFV_BUILD_SELF_CONTAINED "A minimal build with no plugin support and no dependencies on the VC runtime" OFF)
    if(QUICKER_SFV_BUILD_SELF_CONTAINED)
        set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
    endif()
else(MSVC)
    set(CMAKE_POSITION_INDEPENDENT_CODE ON)
endif(MSVC)

if(MSVC)
    option(QUICKER_SFV_USE_BUNDLED_OPENSSL "Use the minimal bundled version of OpenSSL." OFF)
else()
    set(QUICKER_SFV_USE_BUNDLED_OPENSSL OFF)
endif()
if(QUICKER_SFV_BUILD_SELF_CONTAINED)
    set(QUICKER_SFV_USE_BUNDLED_OPENSSL ON CACHE BOOL "External OpenSSL cannot be used in self-contained build" FORCE)
endif()
if(QUICKER_SFV_USE_BUNDLED_OPENSSL)
    add_subdirectory(external/openssl)
else()
    find_package(OpenSSL REQUIRED)
endif()

option(BUILD_TESTS "Determines whether to build tests." ON)
if(BUILD_TESTS)
    enable_testing()
    include(cmake/coverage.cmake)
    add_subdirectory(external/catch2)
endif()
option(BUILD_DOCUMENTATION "Determines whether to build the doxygen documentation." ON)
if(BUILD_DOCUMENTATION)
    find_package(Doxygen OPTIONAL_COMPONENTS dot)
    if(TARGET Doxygen::dot)
        set(QUICKER_SFV_DOXYGEN_HAVE_DOT YES)
    endif()
    configure_file(
        ${PROJECT_SOURCE_DIR}/doc/doxygen.cfg.in
        ${PROJECT_BINARY_DIR}/generated/doc/doxygen.cfg
    )
    add_custom_target(generate_docs
        COMMAND Doxygen::doxygen ${PROJECT_BINARY_DIR}/generated/doc/doxygen.cfg
        COMMENT "Generating Doxygen Documentation"
    )
endif()

add_subdirectory(external/chromium_zlib)

if(NOT QUICKER_SFV_BUILD_SELF_CONTAINED)
    add_library(quicker_sfv_plugin_sdk INTERFACE)
    configure_file(
        ${PROJECT_SOURCE_DIR}/plugin_sdk/quicker_sfv/plugin/plugin_sdk.h.in
        ${PROJECT_BINARY_DIR}/generated/plugin_sdk/quicker_sfv/plugin/plugin_sdk.h
        @ONLY
    )
    target_sources(quicker_sfv_plugin_sdk INTERFACE
        FILE_SET HEADERS
        BASE_DIRS ${PROJECT_SOURCE_DIR}/plugin_sdk ${PROJECT_BINARY_DIR}/generated/plugin_sdk
        FILES
        ${PROJECT_SOURCE_DIR}/plugin_sdk/quicker_sfv/plugin/interfaces.h
        ${PROJECT_SOURCE_DIR}/plugin_sdk/quicker_sfv/plugin/cpp_interfaces.hpp
        ${PROJECT_BINARY_DIR}/generated/plugin_sdk/quicker_sfv/plugin/plugin_sdk.h
    )
endif(NOT QUICKER_SFV_BUILD_SELF_CONTAINED)

add_library(quicker_sfv STATIC)
set(QUICKER_SFV_CMAKE_GENERATED_FILE "This file has been generated by CMake. Do not modify!")
configure_file(
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/version.cpp.in
    ${PROJECT_BINARY_DIR}/generated/quicker_sfv/src/version.cpp
    @ONLY
)
target_sources(quicker_sfv
    PUBLIC
    FILE_SET HEADERS
    BASE_DIRS ${PROJECT_SOURCE_DIR}/lib ${PROJECT_BINARY_DIR}/generated/quicker_sfv/include
    FILES
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/checksum_file.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/checksum_provider.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/digest.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/error.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/file_io.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/hasher.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/line_reader.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/md5_provider.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/quicker_sfv.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/sfv_provider.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/utf.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/version.hpp
    PRIVATE
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/checksum_file.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/checksum_provider.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/digest.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/error.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/file_io.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/hasher.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/line_reader.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/md5_provider.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/quicker_sfv.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/sfv_provider.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/utf.cpp
    ${PROJECT_BINARY_DIR}/generated/quicker_sfv/src/version.cpp
    PRIVATE
    FILE_SET detail_headers TYPE HEADERS
    BASE_DIRS ${PROJECT_SOURCE_DIR}/lib
    FILES
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/crc32.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/md5.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/string_conversion.hpp
    PRIVATE
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/crc32.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/md5.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/string_conversion.cpp
)
if (MSVC)
    target_sources(quicker_sfv PRIVATE ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/quicker_sfv.natvis)
endif ()
target_compile_features(quicker_sfv PUBLIC cxx_std_23)
target_compile_options(quicker_sfv PRIVATE
    $<$<CXX_COMPILER_ID:MSVC>:/W4 /permissive->
    $<$<CXX_COMPILER_ID:GNU,Clang>:-Wall -Wextra -pedantic>
)
target_link_libraries(quicker_sfv PRIVATE OpenSSL::Crypto chromium-zlib)
if(NOT QUICKER_SFV_BUILD_SELF_CONTAINED)
    target_link_libraries(quicker_sfv PUBLIC quicker_sfv_plugin_sdk)
endif()


if(BUILD_TESTS)
    add_executable(quicker_sfv_test)
    target_sources(quicker_sfv_test
        PRIVATE
        ${PROJECT_SOURCE_DIR}/test/fast_crc32.t.cpp
        ${PROJECT_SOURCE_DIR}/test/line_reader.t.cpp
        ${PROJECT_SOURCE_DIR}/test/utf.t.cpp
        ${PROJECT_SOURCE_DIR}/test/version.t.cpp
    )
    target_link_libraries(quicker_sfv_test PRIVATE chromium-zlib quicker_sfv Catch2)
    target_compile_options(quicker_sfv_test PRIVATE $<$<CXX_COMPILER_ID:MSVC>:/utf-8>)
    target_compile_options(quicker_sfv_test PRIVATE
        $<$<CXX_COMPILER_ID:MSVC>:/W4 /permissive->
        $<$<CXX_COMPILER_ID:GNU,Clang>:-Wall -Wextra -pedantic>
    )
    add_test(NAME "QuickerSFV Unit Tests" COMMAND quicker_sfv_test)
endif()

if(MSVC)
    add_library(quicker_sfv_client_support)
    target_sources(quicker_sfv_client_support
        PRIVATE
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/enforce.cpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/file_dialog.cpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/operation_scheduler.cpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/plugin_support.cpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/string_helper.cpp
        PUBLIC
        FILE_SET HEADERS
        BASE_DIRS ${PROJECT_SOURCE_DIR}/client_gui
        FILES
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/command_line_parser.hpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/enforce.hpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/event_handler.hpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/file_dialog.hpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/operation_scheduler.hpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/plugin_support.hpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/string_helper.hpp
        ${PROJECT_SOURCE_DIR}/client_gui/quicker_sfv/ui/user_messages.hpp
    )
    target_link_libraries(quicker_sfv_client_support PUBLIC quicker_sfv)
    target_compile_features(quicker_sfv_client_support PRIVATE cxx_std_23)
    target_compile_options(quicker_sfv_client_support PRIVATE
        $<$<CXX_COMPILER_ID:MSVC>:/W4 /permissive->
        $<$<CXX_COMPILER_ID:GNU,Clang>:-Wall -Wextra -pedantic>
    )
    target_compile_definitions(quicker_sfv_client_support PRIVATE UNICODE _UNICODE WIN32_LEAN_AND_MEAN NOMINMAX)
    if(QUICKER_SFV_BUILD_SELF_CONTAINED)
        target_compile_definitions(quicker_sfv_client_support PUBLIC QUICKER_SFV_BUILD_SELF_CONTAINED)
    endif(QUICKER_SFV_BUILD_SELF_CONTAINED)

    add_executable(QuickerSFV WIN32)
    configure_file(
        ${PROJECT_SOURCE_DIR}/resource/quicker_sfv.manifest.in
        ${PROJECT_BINARY_DIR}/generated/resource/quicker_sfv.manifest
        @ONLY
    )
    file(COPY
        ${PROJECT_SOURCE_DIR}/resource/checkmark.ico
        ${PROJECT_SOURCE_DIR}/resource/cross.ico
        ${PROJECT_SOURCE_DIR}/resource/info.ico
        ${PROJECT_SOURCE_DIR}/resource/quicker_sfv.ico
        ${PROJECT_SOURCE_DIR}/resource/quicker_sfv.rc
        ${PROJECT_SOURCE_DIR}/resource/resource.h
        DESTINATION ${PROJECT_BINARY_DIR}/generated/resource
    )
    target_sources(QuickerSFV
        PRIVATE
        ${PROJECT_SOURCE_DIR}/client_gui/QuickerSFV.cpp
        PRIVATE
        ${PROJECT_BINARY_DIR}/generated/resource/quicker_sfv.rc
        PRIVATE
        FILE_SET HEADERS
        BASE_DIRS ${PROJECT_BINARY_DIR}/generated/resource
        FILES
        ${PROJECT_BINARY_DIR}/generated/resource/resource.h
    )
    target_compile_features(QuickerSFV PRIVATE cxx_std_23)
    target_compile_options(QuickerSFV PRIVATE
        $<$<CXX_COMPILER_ID:MSVC>:/W4 /permissive->
        $<$<CXX_COMPILER_ID:GNU,Clang>:-Wall -Wextra -pedantic>
    )
    target_compile_definitions(QuickerSFV PRIVATE UNICODE _UNICODE WIN32_LEAN_AND_MEAN NOMINMAX)
    target_link_libraries(QuickerSFV PRIVATE UxTheme.lib Comctl32.lib quicker_sfv quicker_sfv_client_support)
    target_link_options(QuickerSFV PRIVATE $<$<CXX_COMPILER_ID:MSVC>:/MANIFEST:NO>)
    set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT QuickerSFV)

    if(BUILD_TESTS)
        add_executable(quicker_sfv_ui_tests)
        target_sources(quicker_sfv_ui_tests
            PRIVATE
            ${PROJECT_SOURCE_DIR}/test/ui/win32_command_line_parser.t.cpp
        )
        target_compile_options(quicker_sfv_ui_tests PRIVATE
            $<$<CXX_COMPILER_ID:MSVC>:/W4 /permissive->
            $<$<CXX_COMPILER_ID:GNU,Clang>:-Wall -Wextra -pedantic>
        )
        target_link_libraries(quicker_sfv_ui_tests PRIVATE quicker_sfv_client_support Catch2)
        add_test(NAME "QuickerSFV UI Unit Tests" COMMAND quicker_sfv_ui_tests)
    endif()
endif(MSVC)

option(BUILD_PLUGINS "" ON)
if(QUICKER_SFV_BUILD_SELF_CONTAINED)
    set(BUILD_PLUGINS OFF CACHE BOOL "No plugin support in self-contained build" FORCE)
endif()
if(BUILD_PLUGINS)
    include(GenerateExportHeader)

    if (OPENSSL_FOUND)
        option(BUILD_SHA1_PLUGIN "Build SHA1 plugin" ON)
        if(BUILD_SHA1_PLUGIN)
            add_library(quicker_sfv_sha1 SHARED)
            generate_export_header(quicker_sfv_sha1
                BASE_NAME QUICKER_SFV_PLUGIN_SHA1
                EXPORT_FILE_NAME ${PROJECT_BINARY_DIR}/generated/plugins/quicker_sfv/sha1/sha1_export.h
            )
            target_sources(quicker_sfv_sha1
                PRIVATE
                ${PROJECT_SOURCE_DIR}/plugins/quicker_sfv/sha1/sha1_plugin.c
                PRIVATE
                FILE_SET HEADERS
                BASE_DIRS ${PROJECT_BINARY_DIR}/generated/plugins
                FILES
                ${PROJECT_BINARY_DIR}/generated/plugins/quicker_sfv/sha1/sha1_export.h
            )
            target_compile_features(quicker_sfv_sha1 PRIVATE c_std_17)
            target_compile_options(quicker_sfv_sha1 PRIVATE
                $<$<CXX_COMPILER_ID:MSVC>:/W4 /permissive->
                $<$<CXX_COMPILER_ID:GNU,Clang>:-Wall -Wextra -pedantic>
            )
            target_link_libraries(quicker_sfv_sha1 PRIVATE quicker_sfv_plugin_sdk OpenSSL::Crypto)
        endif(BUILD_SHA1_PLUGIN)
    endif(OPENSSL_FOUND)

    option(BUILD_RAR_PLUGIN "Build rar plugin" ON)
    if(BUILD_RAR_PLUGIN)
        add_library(quicker_sfv_rar SHARED)
        generate_export_header(quicker_sfv_rar
            BASE_NAME QUICKER_SFV_PLUGIN_RAR
            EXPORT_FILE_NAME ${PROJECT_BINARY_DIR}/generated/plugins/quicker_sfv/rar/rar_export.h
        )
        target_sources(quicker_sfv_rar
            PRIVATE
            ${PROJECT_SOURCE_DIR}/plugins/quicker_sfv/rar/rar_plugin.cpp
            ${PROJECT_SOURCE_DIR}/plugins/quicker_sfv/rar/rar_provider.cpp
            PRIVATE
            FILE_SET HEADERS
            BASE_DIRS ${PROJECT_BINARY_DIR}/generated/plugins ${PROJECT_SOURCE_DIR}/plugins/
            FILES
            ${PROJECT_BINARY_DIR}/generated/plugins/quicker_sfv/rar/rar_export.h
            ${PROJECT_SOURCE_DIR}/plugins/quicker_sfv/rar/rar_provider.hpp
        )
        target_compile_features(quicker_sfv_rar PRIVATE cxx_std_23)
        target_compile_options(quicker_sfv_rar PRIVATE
            $<$<CXX_COMPILER_ID:MSVC>:/W4 /permissive->
            $<$<CXX_COMPILER_ID:GNU,Clang>:-Wall -Wextra -pedantic>
        )
        target_link_libraries(quicker_sfv_rar PRIVATE quicker_sfv_plugin_sdk quicker_sfv)
    endif(BUILD_RAR_PLUGIN)
endif()
