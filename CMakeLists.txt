cmake_minimum_required(VERSION 3.30)

set(QUICKER_SFV_PROJECT_VERSION_MAJOR 0)
set(QUICKER_SFV_PROJECT_VERSION_MINOR 1)
set(QUICKER_SFV_PROJECT_VERSION_PATCH 0)

if (NOT QUICKER_SFV_BUILD_RELEASE)
    string(TIMESTAMP QUICKER_SFV_PROJECT_VERSION_TWEAK "%y%j")
else()
    set(QUICKER_SFV_PROJECT_VERSION_TWEAK 0)
endif()
if (QUICKER_SFV_PROJECT_VERSION_TWEAK GREATER 65535)
    message(FATAL_ERROR "Invalid tweak version number (must be smaller than 65536): ${QUICKER_SFV_PROJECT_VERSION_TWEAK}")
endif()
set(QUICKER_SFV_PROJECT_VERSION ${QUICKER_SFV_PROJECT_VERSION_MAJOR}.${QUICKER_SFV_PROJECT_VERSION_MINOR}.${QUICKER_SFV_PROJECT_VERSION_PATCH}.${QUICKER_SFV_PROJECT_VERSION_TWEAK})

project(QuickerSFV
    VERSION ${QUICKER_SFV_PROJECT_VERSION}
    DESCRIPTION "QuickerSFV"
    HOMEPAGE_URL https://github.com/ComicSansMS/QuickerSFV/
)

find_package(OpenSSL REQUIRED)

add_compile_options()
add_compile_options()
add_compile_options($<$<CXX_COMPILER_ID:GNU>:-pedantic>)
add_compile_options($<$<CXX_COMPILER_ID:GNU>:-Wextra>)

add_subdirectory(external/chromium_zlib)

add_library(quicker_sfv STATIC)
set(QUICKER_SFV_CMAKE_GENERATED_FILE "This file has been generated by CMake. Do not modify!")
configure_file(
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/version.cpp.in
    ${PROJECT_BINARY_DIR}/generated/quicker_sfv/version.cpp
    @ONLY
)
target_sources(quicker_sfv
    PUBLIC
    FILE_SET HEADERS
    BASE_DIRS ${PROJECT_SOURCE_DIR}/lib
    FILES
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/checksum_file.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/checksum_provider.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/digest.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/error.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/file_io.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/hasher.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/line_reader.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/md5_provider.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/quicker_sfv.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/sfv_provider.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/utf.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/version.hpp
    PRIVATE
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/checksum_file.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/checksum_provider.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/digest.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/error.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/file_io.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/hasher.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/line_reader.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/md5_provider.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/quicker_sfv.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/sfv_provider.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/utf.cpp
    ${PROJECT_BINARY_DIR}/generated/quicker_sfv/version.cpp
    PRIVATE
    FILE_SET detail_headers TYPE HEADERS
    BASE_DIRS ${PROJECT_SOURCE_DIR}/lib
    FILES
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/crc32.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/md5.hpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/string_conversion.hpp
    PRIVATE
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/crc32.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/md5.cpp
    ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/detail/string_conversion.cpp
)
if (MSVC)
    target_sources(quicker_sfv PRIVATE ${PROJECT_SOURCE_DIR}/lib/quicker_sfv/quicker_sfv.natvis)
endif ()
target_compile_features(quicker_sfv PUBLIC cxx_std_23)
target_compile_options(quicker_sfv PRIVATE
    $<$<CXX_COMPILER_ID:MSVC>:/W4 /permissive->
    $<$<CXX_COMPILER_ID:GNU,Clang>:-Wall -Wextra -pedantic>
)
target_link_libraries(quicker_sfv PRIVATE OpenSSL::Crypto chromium-zlib)

option(BUILD_TESTS "Determines whether to build tests." ON)
if(BUILD_TESTS)
    enable_testing()

    if(NOT TARGET Catch)
        if(NOT EXISTS ${PROJECT_BINARY_DIR}/external/catch/catch.hpp)
            file(DOWNLOAD https://github.com/catchorg/Catch2/releases/download/v2.13.10/catch.hpp ${PROJECT_BINARY_DIR}/external/catch/catch.hpp)
        endif()
        add_library(Catch STATIC ${PROJECT_SOURCE_DIR}/test/catch_main.cpp)
        target_include_directories(Catch PUBLIC ${PROJECT_BINARY_DIR}/external/catch)
    endif()

    add_executable(quicker_sfv_test)
    target_sources(quicker_sfv_test
        PRIVATE
        ${PROJECT_SOURCE_DIR}/test/utf.t.cpp
    )
    target_link_libraries(quicker_sfv_test PRIVATE quicker_sfv Catch)
    target_compile_options(quicker_sfv_test PRIVATE $<$<CXX_COMPILER_ID:MSVC>:/utf-8>)
    target_compile_options(quicker_sfv_test PRIVATE
        $<$<CXX_COMPILER_ID:MSVC>:/W4 /permissive->
        $<$<CXX_COMPILER_ID:GNU,Clang>:-Wall -Wextra -pedantic>
    )
    add_test(NAME "QuickerSFV Unit Tests" COMMAND quicker_sfv_test)
endif()


if(MSVC)
    add_executable(QuickerSFV WIN32)
    configure_file(
        ${PROJECT_SOURCE_DIR}/resource/quicker_sfv.manifest.in
        ${PROJECT_BINARY_DIR}/generated/resource/quicker_sfv.manifest
        @ONLY
    )
    file(COPY
        ${PROJECT_SOURCE_DIR}/resource/checkmark.ico
        ${PROJECT_SOURCE_DIR}/resource/cross.ico
        ${PROJECT_SOURCE_DIR}/resource/info.ico
        ${PROJECT_SOURCE_DIR}/resource/quicker_sfv.ico
        ${PROJECT_SOURCE_DIR}/resource/quicker_sfv.rc
        ${PROJECT_SOURCE_DIR}/resource/resource.h
        DESTINATION ${PROJECT_BINARY_DIR}/generated/resource
    )
    target_sources(QuickerSFV
        PRIVATE
        ${PROJECT_SOURCE_DIR}/QuickerSFV.cpp
        ${PROJECT_SOURCE_DIR}/client_gui/ui/enforce.cpp
        ${PROJECT_SOURCE_DIR}/client_gui/ui/file_dialog.cpp
        PRIVATE
        FILE_SET HEADERS
        BASE_DIRS ${PROJECT_SOURCE_DIR}/client_gui
        FILES
        ${PROJECT_SOURCE_DIR}/client_gui/ui/command_line_parser.hpp
        ${PROJECT_SOURCE_DIR}/client_gui/ui/enforce.hpp
        ${PROJECT_SOURCE_DIR}/client_gui/ui/file_dialog.hpp
        PRIVATE
        ${PROJECT_BINARY_DIR}/generated/resource/quicker_sfv.rc
        PRIVATE
        FILE_SET HEADERS
        BASE_DIRS ${PROJECT_BINARY_DIR}/generated/resource
        FILES
        ${PROJECT_BINARY_DIR}/generated/resource/resource.h
    )
    target_compile_options(QuickerSFV PRIVATE
      $<$<CXX_COMPILER_ID:MSVC>:/W4>
    )
    target_compile_features(QuickerSFV PRIVATE cxx_std_23)
    target_compile_options(QuickerSFV PRIVATE
        $<$<CXX_COMPILER_ID:MSVC>:/W4 /permissive->
        $<$<CXX_COMPILER_ID:GNU,Clang>:-Wall -Wextra -pedantic>
    )
    target_compile_definitions(QuickerSFV PRIVATE UNICODE _UNICODE WIN32_LEAN_AND_MEAN NOMINMAX)
    target_link_libraries(QuickerSFV PRIVATE UxTheme.lib Comctl32.lib quicker_sfv)
    target_link_options(QuickerSFV PRIVATE $<$<CXX_COMPILER_ID:MSVC>:/MANIFEST:NO>)
    set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT QuickerSFV)
    
    if(BUILD_TESTS)
        add_executable(quicker_sfv_ui_tests)
        target_sources(quicker_sfv_ui_tests
            PRIVATE
            FILE_SET HEADERS
            BASE_DIRS ${PROJECT_SOURCE_DIR}/client_gui
            FILES
            ${PROJECT_SOURCE_DIR}/client_gui/ui/command_line_parser.hpp
            PRIVATE
            ${PROJECT_SOURCE_DIR}/test/ui/win32_command_line_parser.t.cpp
        )
        target_link_libraries(quicker_sfv_ui_tests PRIVATE quicker_sfv Catch)
        add_test(NAME "QuickerSFV UI Unit Tests" COMMAND quicker_sfv_ui_tests)
    endif()
endif(MSVC)
